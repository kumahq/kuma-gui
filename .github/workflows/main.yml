# release.yaml is dependant on this name being "main"
name: 'main'

# Ensures that only one workflow is run per branch at a time.
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}

on:
  push:
    branches:
      - master
      - release-[0-9]+.[0-9]+
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read # for checking out the repository (e.g. actions/checkout)

jobs:
  lint-actions:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: zgosalvez/github-actions-ensure-sha-pinned-actions@fc87bb5b5a97953d987372e74478de634726b3e5 # v3.0.25

  install-dependencies:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs:
      - lint-actions
    outputs:
      spec_groups: ${{ steps.set-groups.outputs.result }}
      packages: ${{ steps.meta.outputs.packages }}
      unit: ${{ steps.meta.outputs.unit }}
      preview: ${{ steps.meta.outputs.preview }}
      e2e: ${{ steps.meta.outputs.e2e }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: ./.github/actions/bootstrap/
        with:
          install-cmd: |
            make install
      - id: meta
        run: |
          echo "packages<<EOF" >> $GITHUB_OUTPUT
            make meta/packages >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "unit<<EOF" >> $GITHUB_OUTPUT
            make meta/unit >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "preview<<EOF" >> $GITHUB_OUTPUT
            make meta/preview >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "e2e<<EOF" >> $GITHUB_OUTPUT
            make meta/e2e >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - id: set-groups
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          THREAD_COUNT: 4
        with:
          script: |
            const ci = require('@kumahq/config/ci')
            const json = {
              '@kumahq/kuma-gui': ci.getPartitionedTestFiles(process.env.THREAD_COUNT, 'packages/kuma-gui/'),
            }
            return json
  lint-tests:
    timeout-minutes: 30
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.install-dependencies.outputs.packages) }}
    name: |
      Linting ${{ matrix.package.name }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: ./.github/actions/bootstrap/
      - run: |
          make -C ${{ matrix.package.path }} lint

  cli-tests:
    timeout-minutes: 30
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.install-dependencies.outputs.unit) }}
    name: |
      Unit tests: ${{ matrix.package.name }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: ./.github/actions/bootstrap/
      - run: |
          make -C ${{ matrix.package.path }} test/unit

  browser-tests:
    timeout-minutes: 30
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.install-dependencies.outputs.e2e) }}
        container: [0, 1, 2, 3]
    name: |
      Browser tests: ${{ matrix.package.name }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: ./.github/actions/bootstrap/
      - run: |
          make -C ${{ matrix.package.path }} run/e2e &
          make -C ${{ matrix.package.path }} \
            CYPRESS_SPEC="$(echo '${{ needs.install-dependencies.outputs.spec_groups }}' | jq -cMr '.["${{ matrix.package.name }}"]' | jq -cMr '.[${{ matrix.container }}]')" \
            test/e2e
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: cypress-artifacts-${{ matrix.package.slug }}-${{ matrix.container }}
          retention-days: ${{ github.event_name == 'pull_request' && 3 || 30 }}
          path: |
            ${{ matrix.package.path }}/cypress/screenshots
            ${{ matrix.package.path }}/cypress/videos

  post-checks:
    # There is a branch protection rule on the repo that requires "branch-protection" to
    # be successful
    name: branch-protection
    #
    needs:
      - lint-tests
      - cli-tests
      - browser-tests
    runs-on: ubuntu-latest
    if: |
      always()
    steps:
      - name: Check for failures
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: echo '${{toJSON(needs)}}' && exit 1
      - run: echo "Successful"
