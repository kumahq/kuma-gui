name: release
run-name: |
  release (branch: ${{ github.event.workflow_run.head_branch || inputs.branch }})

# **Note 1**: You can merge a pull request into a release branch of the form
# “release-$MAJOR.$MINOR” (e.g. “release-2.1”) in order to create the GUI
# update PR in the matching release branch of the host repository. For this to
# work, the name of this repository’s release branch must match that of the
# host repository exactly.

# **Note 2**: Since this workflow can be triggered using the `workflow_run`
# event type, one needs to pay special attention to the context in which runs
# will be executed based on this workflow. Most importantly, runs will be using
# the workflow file found **in the project’s default branch**. This means that
# context variables like `github.ref` and `github.ref_name` will refer to the
# default branch **and not the branch that caused the workflow_run event to
# trigger**. Also, it likely means that to change the behavior of the workflow
# in a release branch, one will actually have to update the workflow file in
# the default branch, too.

# Ensures that we only run one workflow per branch at a time.
# Already running workflows will be cancelled.
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.workflow_run.head_branch || inputs.branch }}

on:

  # Allows running the workflow manually.
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
        description: The base branch for which to create a release PR (default or release branch)
      sha:
        required: true
        type: string
        description: The commit hash for which to create a release PR
  workflow_run:
    workflows:
      - main
    types:
      - completed
    branches:
      - master
      - release-[0-9]+.[0-9]+

permissions:
  contents: read # for checking out the repository (e.g. actions/checkout)

jobs:
  # Creates a pull request in the main application to update its GUI i.e. a GUI release
  create-release-pr:
    # Only runs this job when the triggering workflow run was a success (i.e. the "Tests" workflow passes).
    if: ${{ github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
        }}
    #
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - name: "@kumahq/kuma-gui"
            path: packages/kuma-gui
            destination: kumahq/kuma
    name: |
      Releasing ${{ matrix.package.name }} to ${{ matrix.package.destination }}
    env:
      SHA: ${{ github.event.workflow_run.head_sha || inputs.sha }}
      BRANCH: ${{ github.event.workflow_run.head_branch || inputs.branch }}
      APP_WORKSPACE: repository
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.SHA }}

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'

      - run: |
          make -C ${{ matrix.package.path }} build

      - uses: Kong/public-shared-actions/security-actions/sca@8223e61a288ed9d31f507476da0d51e4f421a6af
        id: sbom
        env:
          SYFT_SOURCE_NAME: ${{ github.repository }}
          SYFT_SOURCE_VERSION: "${{ env.BRANCH }}@${{ env.SHA }}"
        with:
          asset_prefix: kuma-gui
          dir: '.'
          config: .syft.yaml
          fail_build: 'true' # Fail job if critical vulnerabilities are detected

      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: github-app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          # Access to kuma needs to be explicitly included here so that a pull
          # request can be opened in that repository.
          repositories: "kuma-gui,kuma"


      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.github-app-token.outputs.token }}
          ref: ${{ env.BRANCH }}
          path: ${{ env.APP_WORKSPACE }}
          repository: ${{ matrix.package.destination }}

      - run: |
          make -C ${{ matrix.package.path }} release \
            DESTINATION=${{github.workspace}}/${{ env.APP_WORKSPACE }}/app/kuma-ui/pkg/resources

      ## For testing if you've commented out the create-pull-request step
      # - run: |
      #     cd ${{ env.APP_WORKSPACE }} && git ls-files --exclude-standard --modified --deleted --others -t

      # https://github.com/peter-evans/create-pull-request
      - uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          # Note: This token can be a GITHUB_TOKEN if the created PR doesn’t
          # need to trigger workflows `on: push` or `on: pull_request`.
          # However, we definitely need to trigger workflows (e.g. to run test
          # workflows on the PR). Instead, we should use a personal access
          # token (PAT). See
          # https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs
          # for a more detailed explanation.
          token: ${{ steps.github-app-token.outputs.token }}
          path: ${{ env.APP_WORKSPACE }}
          base: ${{ env.BRANCH }}
          commit-message: |
            chore(deps): bump ${{ github.repository }} to ${{ env.SHA }}

            Bumps ${{ github.repository }} to version [${{ env.BRANCH }}@${{ env.SHA }}](https://github.com/${{ github.repository }}/tree/${{ env.SHA }})
          committer: GitHub <noreply@github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          team-reviewers: kuma-maintainers
          signoff: true
          branch: chore/update-gui-in-${{ env.BRANCH }}
          delete-branch: true
          title: 'chore(deps): bump ${{ github.repository }} to ${{ env.SHA }}'
          labels: ci/skip-e2e-test,${{ env.BRANCH }},ci/auto-merge
          body: |
            Bumps ${{ github.repository }} to version  [${{ env.BRANCH }}@${{ env.SHA }}](https://github.com/${{ github.repository }}/tree/${{ env.SHA }})

            > Changelog: chore(deps): use latest ${{ github.repository }}
          draft: false
